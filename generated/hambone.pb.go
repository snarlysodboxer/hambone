// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hambone.proto

/*
Package hambone is a generated protocol buffer package.

It is generated from these files:
	hambone.proto

It has these top-level messages:
	Instance
	InstanceList
	Status
	DeploymentStatus
	GetOptions
	File
	Empty
*/
package hambone

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Instance struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	KustomizationYaml    string    `protobuf:"bytes,2,opt,name=kustomization_yaml,json=kustomizationYaml" json:"kustomization_yaml,omitempty"`
	Statuses             []*Status `protobuf:"bytes,3,rep,name=statuses" json:"statuses,omitempty"`
	StatusesErrorMessage string    `protobuf:"bytes,4,opt,name=statuses_error_message,json=statusesErrorMessage" json:"statuses_error_message,omitempty"`
	OldInstance          *Instance `protobuf:"bytes,5,opt,name=old_instance,json=oldInstance" json:"old_instance,omitempty"`
	Files                []*File   `protobuf:"bytes,6,rep,name=files" json:"files,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetKustomizationYaml() string {
	if m != nil {
		return m.KustomizationYaml
	}
	return ""
}

func (m *Instance) GetStatuses() []*Status {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *Instance) GetStatusesErrorMessage() string {
	if m != nil {
		return m.StatusesErrorMessage
	}
	return ""
}

func (m *Instance) GetOldInstance() *Instance {
	if m != nil {
		return m.OldInstance
	}
	return nil
}

func (m *Instance) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type InstanceList struct {
	Instances []*Instance `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceList) Reset()                    { *m = InstanceList{} }
func (m *InstanceList) String() string            { return proto.CompactTextString(m) }
func (*InstanceList) ProtoMessage()               {}
func (*InstanceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstanceList) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

type Status struct {
	// Types that are valid to be assigned to Item:
	//	*Status_Deployment
	Item isStatus_Item `protobuf_oneof:"item"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isStatus_Item interface {
	isStatus_Item()
}

type Status_Deployment struct {
	Deployment *DeploymentStatus `protobuf:"bytes,1,opt,name=deployment,oneof"`
}

func (*Status_Deployment) isStatus_Item() {}

func (m *Status) GetItem() isStatus_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Status) GetDeployment() *DeploymentStatus {
	if x, ok := m.GetItem().(*Status_Deployment); ok {
		return x.Deployment
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Status) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Status_OneofMarshaler, _Status_OneofUnmarshaler, _Status_OneofSizer, []interface{}{
		(*Status_Deployment)(nil),
	}
}

func _Status_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Status)
	// item
	switch x := m.Item.(type) {
	case *Status_Deployment:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deployment); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Status.Item has unexpected type %T", x)
	}
	return nil
}

func _Status_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Status)
	switch tag {
	case 1: // item.deployment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeploymentStatus)
		err := b.DecodeMessage(msg)
		m.Item = &Status_Deployment{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Status_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Status)
	// item
	switch x := m.Item.(type) {
	case *Status_Deployment:
		s := proto.Size(x.Deployment)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeploymentStatus struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Desired   int32  `protobuf:"varint,2,opt,name=desired" json:"desired,omitempty"`
	Current   int32  `protobuf:"varint,3,opt,name=current" json:"current,omitempty"`
	UpToDate  int32  `protobuf:"varint,4,opt,name=up_to_date,json=upToDate" json:"up_to_date,omitempty"`
	Available int32  `protobuf:"varint,5,opt,name=available" json:"available,omitempty"`
}

func (m *DeploymentStatus) Reset()                    { *m = DeploymentStatus{} }
func (m *DeploymentStatus) String() string            { return proto.CompactTextString(m) }
func (*DeploymentStatus) ProtoMessage()               {}
func (*DeploymentStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeploymentStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeploymentStatus) GetDesired() int32 {
	if m != nil {
		return m.Desired
	}
	return 0
}

func (m *DeploymentStatus) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *DeploymentStatus) GetUpToDate() int32 {
	if m != nil {
		return m.UpToDate
	}
	return 0
}

func (m *DeploymentStatus) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

type GetOptions struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Start           int32  `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	Stop            int32  `protobuf:"varint,3,opt,name=stop" json:"stop,omitempty"`
	ExcludeStatuses bool   `protobuf:"varint,4,opt,name=exclude_statuses,json=excludeStatuses" json:"exclude_statuses,omitempty"`
}

func (m *GetOptions) Reset()                    { *m = GetOptions{} }
func (m *GetOptions) String() string            { return proto.CompactTextString(m) }
func (*GetOptions) ProtoMessage()               {}
func (*GetOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetOptions) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetOptions) GetStop() int32 {
	if m != nil {
		return m.Stop
	}
	return 0
}

func (m *GetOptions) GetExcludeStatuses() bool {
	if m != nil {
		return m.ExcludeStatuses
	}
	return false
}

type File struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Directory string `protobuf:"bytes,2,opt,name=directory" json:"directory,omitempty"`
	Contents  string `protobuf:"bytes,3,opt,name=contents" json:"contents,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *File) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*Instance)(nil), "hambone.Instance")
	proto.RegisterType((*InstanceList)(nil), "hambone.InstanceList")
	proto.RegisterType((*Status)(nil), "hambone.Status")
	proto.RegisterType((*DeploymentStatus)(nil), "hambone.DeploymentStatus")
	proto.RegisterType((*GetOptions)(nil), "hambone.GetOptions")
	proto.RegisterType((*File)(nil), "hambone.File")
	proto.RegisterType((*Empty)(nil), "hambone.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Instances service

type InstancesClient interface {
	Apply(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error)
	Get(ctx context.Context, in *GetOptions, opts ...grpc.CallOption) (*InstanceList, error)
	Delete(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error)
	GetTemplates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InstanceList, error)
}

type instancesClient struct {
	cc *grpc.ClientConn
}

func NewInstancesClient(cc *grpc.ClientConn) InstancesClient {
	return &instancesClient{cc}
}

func (c *instancesClient) Apply(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := grpc.Invoke(ctx, "/hambone.Instances/Apply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesClient) Get(ctx context.Context, in *GetOptions, opts ...grpc.CallOption) (*InstanceList, error) {
	out := new(InstanceList)
	err := grpc.Invoke(ctx, "/hambone.Instances/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesClient) Delete(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := grpc.Invoke(ctx, "/hambone.Instances/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instancesClient) GetTemplates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InstanceList, error) {
	out := new(InstanceList)
	err := grpc.Invoke(ctx, "/hambone.Instances/GetTemplates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Instances service

type InstancesServer interface {
	Apply(context.Context, *Instance) (*Instance, error)
	Get(context.Context, *GetOptions) (*InstanceList, error)
	Delete(context.Context, *Instance) (*Instance, error)
	GetTemplates(context.Context, *Empty) (*InstanceList, error)
}

func RegisterInstancesServer(s *grpc.Server, srv InstancesServer) {
	s.RegisterService(&_Instances_serviceDesc, srv)
}

func _Instances_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Instance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hambone.Instances/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).Apply(ctx, req.(*Instance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instances_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hambone.Instances/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).Get(ctx, req.(*GetOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instances_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Instance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hambone.Instances/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).Delete(ctx, req.(*Instance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Instances_GetTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).GetTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hambone.Instances/GetTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).GetTemplates(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Instances_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hambone.Instances",
	HandlerType: (*InstancesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _Instances_Apply_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Instances_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Instances_Delete_Handler,
		},
		{
			MethodName: "GetTemplates",
			Handler:    _Instances_GetTemplates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hambone.proto",
}

func init() { proto.RegisterFile("hambone.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0x7e, 0xf3, 0xe1, 0x34, 0x9e, 0xa4, 0x6f, 0xdb, 0x6d, 0x29, 0x26, 0xaa, 0x50, 0x65, 0x2e,
	0xa5, 0x88, 0x5a, 0x84, 0x22, 0x24, 0x10, 0x42, 0xa0, 0x7e, 0x80, 0x44, 0x41, 0x72, 0xcb, 0x81,
	0x93, 0xb5, 0x8d, 0x07, 0xb0, 0x58, 0x7b, 0x57, 0xde, 0x71, 0x45, 0xa8, 0x72, 0xe1, 0xca, 0x11,
	0x89, 0x3f, 0xc6, 0x5f, 0xe0, 0xc8, 0x8f, 0x40, 0x5e, 0x7f, 0xa4, 0x6d, 0x82, 0xc4, 0xc9, 0x3b,
	0x33, 0xcf, 0x3c, 0xf3, 0xcc, 0x87, 0x0c, 0x8b, 0x1f, 0x79, 0x7c, 0x2a, 0x13, 0xdc, 0x51, 0xa9,
	0x24, 0xc9, 0x16, 0x4a, 0x73, 0xe0, 0x9c, 0x61, 0x12, 0xca, 0xd4, 0xe3, 0x49, 0x22, 0x89, 0x53,
	0x24, 0x13, 0x5d, 0x40, 0xdc, 0x6f, 0x4d, 0xe8, 0xbe, 0x4c, 0x34, 0xf1, 0x64, 0x84, 0x8c, 0x41,
	0x3b, 0xe1, 0x31, 0x3a, 0x8d, 0xcd, 0xc6, 0x96, 0xed, 0x9b, 0x37, 0xbb, 0x0b, 0xec, 0x53, 0xa6,
	0x49, 0xc6, 0xd1, 0x17, 0x93, 0x18, 0x8c, 0x79, 0x2c, 0x9c, 0xa6, 0x41, 0xac, 0x5c, 0x8a, 0xbc,
	0xe3, 0xb1, 0x60, 0x77, 0xa0, 0xab, 0x89, 0x53, 0xa6, 0x51, 0x3b, 0xad, 0xcd, 0xd6, 0x56, 0x6f,
	0xb8, 0xb4, 0x53, 0x89, 0x3a, 0x36, 0x01, 0xbf, 0x06, 0xb0, 0x5d, 0x58, 0xaf, 0xde, 0x01, 0xa6,
	0xa9, 0x4c, 0x83, 0x18, 0xb5, 0xe6, 0x1f, 0xd0, 0x69, 0x1b, 0xfe, 0xb5, 0x2a, 0xba, 0x9f, 0x07,
	0x8f, 0x8a, 0x18, 0xdb, 0x85, 0xbe, 0x14, 0x61, 0x10, 0x95, 0xaa, 0x1d, 0x6b, 0xb3, 0xb1, 0xd5,
	0x1b, 0xae, 0xd4, 0x65, 0xaa, 0x76, 0xfc, 0x9e, 0x14, 0x61, 0xdd, 0xdb, 0x2d, 0xb0, 0xde, 0x47,
	0x02, 0xb5, 0xd3, 0x31, 0xaa, 0x16, 0x6b, 0xf8, 0x41, 0x24, 0xd0, 0x2f, 0x62, 0xee, 0x53, 0xe8,
	0x57, 0x09, 0xaf, 0x22, 0x4d, 0xcc, 0x03, 0xbb, 0x2a, 0xa3, 0x9d, 0x86, 0x49, 0x9c, 0x53, 0x67,
	0x8a, 0x71, 0x8f, 0xa0, 0x53, 0x74, 0xc9, 0x1e, 0x03, 0x84, 0xa8, 0x84, 0x1c, 0xc7, 0x98, 0x90,
	0x99, 0x68, 0x6f, 0x78, 0xa3, 0xce, 0xdd, 0xab, 0x43, 0x05, 0xfc, 0xc5, 0x7f, 0xfe, 0x05, 0xf8,
	0xf3, 0x0e, 0xb4, 0x23, 0xc2, 0xd8, 0xfd, 0xd1, 0x80, 0xe5, 0xab, 0xd0, 0xb9, 0x5b, 0x72, 0x60,
	0x21, 0x44, 0x1d, 0xa5, 0x18, 0x9a, 0xd5, 0x58, 0x7e, 0x65, 0xe6, 0x91, 0x51, 0x96, 0xa6, 0xb9,
	0x88, 0x56, 0x11, 0x29, 0x4d, 0xb6, 0x01, 0x90, 0xa9, 0x80, 0x64, 0x10, 0x72, 0x2a, 0x26, 0x6e,
	0xf9, 0xdd, 0x4c, 0x9d, 0xc8, 0x3d, 0x4e, 0xc8, 0x36, 0xc0, 0xe6, 0x67, 0x3c, 0x12, 0xfc, 0x54,
	0x14, 0x23, 0xb6, 0xfc, 0xa9, 0xc3, 0xcd, 0x00, 0x0e, 0x91, 0xde, 0x28, 0x73, 0x4a, 0x73, 0x15,
	0xad, 0x81, 0xa5, 0x89, 0xa7, 0x54, 0xea, 0x29, 0x8c, 0x1c, 0xa9, 0x49, 0xaa, 0x52, 0x8a, 0x79,
	0xb3, 0xdb, 0xb0, 0x8c, 0x9f, 0x47, 0x22, 0x0b, 0x31, 0xa8, 0x4f, 0x27, 0x57, 0xd3, 0xf5, 0x97,
	0x4a, 0xff, 0x71, 0xe9, 0x76, 0x4f, 0xa0, 0x9d, 0xaf, 0x6b, 0x6e, 0xc1, 0x0d, 0xb0, 0xc3, 0x28,
	0xc5, 0x11, 0xc9, 0x74, 0x5c, 0xde, 0xe7, 0xd4, 0xc1, 0x06, 0xd0, 0x1d, 0xc9, 0x84, 0x30, 0x21,
	0x6d, 0x8a, 0xdb, 0x7e, 0x6d, 0xbb, 0x0b, 0x60, 0xed, 0xc7, 0x8a, 0xc6, 0xc3, 0xdf, 0x4d, 0xb0,
	0xab, 0xad, 0x6a, 0x76, 0x00, 0xd6, 0x33, 0xa5, 0xc4, 0x98, 0xcd, 0xae, 0x7c, 0x30, 0xeb, 0x72,
	0xaf, 0x7f, 0xfd, 0xf9, 0xeb, 0x7b, 0x73, 0xc5, 0xed, 0x7b, 0x67, 0xf7, 0xbc, 0xea, 0x22, 0x1e,
	0x35, 0xb6, 0x99, 0x82, 0xd6, 0x21, 0x12, 0x5b, 0xad, 0x53, 0xa6, 0x93, 0x1b, 0x5c, 0x9b, 0xe1,
	0xc9, 0xef, 0xce, 0x7d, 0x62, 0xb8, 0x1e, 0xb2, 0x07, 0x17, 0xb9, 0xbc, 0x73, 0x33, 0xc3, 0x49,
	0xfe, 0x95, 0x6a, 0xe2, 0x9d, 0x5f, 0x9d, 0xda, 0xc4, 0x3b, 0xcf, 0x27, 0x31, 0x61, 0xaf, 0xa1,
	0xb3, 0x87, 0x02, 0x09, 0xff, 0x51, 0xfa, 0x4d, 0x53, 0xce, 0xd9, 0x5e, 0xbd, 0x5c, 0xce, 0x90,
	0xe5, 0x1d, 0xbc, 0x85, 0xfe, 0x21, 0xd2, 0x09, 0xc6, 0x4a, 0x70, 0x42, 0xcd, 0xfe, 0xaf, 0x29,
	0xcc, 0xdc, 0xfe, 0xd6, 0x45, 0x49, 0xcb, 0xd6, 0x2f, 0xd1, 0x52, 0x45, 0x73, 0xda, 0x31, 0xbf,
	0xa0, 0xfb, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x0f, 0x7f, 0x70, 0xb6, 0x04, 0x00, 0x00,
}
