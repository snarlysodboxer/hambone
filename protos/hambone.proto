syntax = "proto3";

package hambone;

import "vendor/annotations.proto";

service SpecGroups {
    rpc Create(SpecGroup) returns (Name) {
        option (google.api.http) = {
            post: "/v1/specgroup"
            body: "*"
        };
    }
    rpc Read(Name) returns (SpecGroup) {
        option (google.api.http) = {
            get: "/v1/specgroup/{name}"
        };
    }
    rpc List(Empty) returns (StringList) {
        option (google.api.http) = {
            get: "/v1/specgroup"
        };
    }
    /* rpc Update(SpecGroup) returns (Name) { */
    /*     option (google.api.http) = { */
    /*         put: "/v1/specgroup/{name}" */
    /*         body: "*" */
    /*     }; */
    /* } */
    /* rpc Delete(Name) returns (Name) { */
    /*     option (google.api.http) = { */
    /*         delete: "/v1/specgroup/{name}" */
    /*         body: "*" */
    /*     }; */
    /* } */
}

message Empty {}

message SpecGroup {
    string name = 1;
    repeated Spec specs = 2;
}

message Spec {
    string name = 1;
    string template = 2;
}

message Name {
    string name = 1;
}

message StringList {
    repeated string list = 1;
}


service Instances {
    rpc Create(Instance) returns (Name) {
        option (google.api.http) = {
            post: "/v1/instance"
            body: "*"
        };
    }
    rpc Read(Name) returns (Instance) {
        option (google.api.http) = {
            get: "/v1/instance/{name}"
        };
    }
    rpc List(Empty) returns (StringMap) {
        option (google.api.http) = {
            get: "/v1/instance"
        };
    }
    // TODO
    // rpc Render(Instance) returns (StringList) {
    //     option (google.api.http) = {
    //         get: "/v1/instance/render{name}"
    //     };
    // }
    // rpc Status(TODO) returns (TODO) {
    //     option (google.api.http) = {
    //         get: "/v1/instance/status/{name}"
    //     };
    // }
}

message Instance {
    string name = 1;
    string spec_group_name = 2;
    repeated ValueSet value_sets = 3;
}

message ValueSet {
    string spec_name = 1;
    string json_blob = 2;
}

message StringMap {
    map<string, string> list = 1;
}

